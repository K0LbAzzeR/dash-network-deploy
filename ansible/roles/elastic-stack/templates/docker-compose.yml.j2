version: '3.2'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.0
    volumes:
      - type: bind
        source: {{ elastic_path }}/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch_data
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xms1g -Xmx3g"
      ELASTIC_PASSWORD: {{ elastic_password }}
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - elastic

  #logstash:
  #  image: docker.elastic.co/logstash/logstash:7.11.0
  #  volumes:
  #    - type: bind
  #      source: {{ elastic_path }}/logstash.yml
  #      target: /usr/share/logstash/config/logstash.yml
  #      read_only: true
  #    - type: bind
  #      source: {{ elastic_path }}/logstash.conf
  #      target: /usr/share/logstash/pipeline/logstash.conf
  #      read_only: true
  #  ports:
  #    - "5044:5044"
  #    - "5000:5000/tcp"
  #    - "5000:5000/udp"
  #    - "9600:9600"
  #  environment:
  #    LS_JAVA_OPTS: "-Xmx256m -Xms256m"
  #  networks:
  #    - elastic
  #  depends_on:
  #    - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:7.11.0
    volumes:
      - type: bind
        source: {{ elastic_path }}/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "{{ kibana_port }}:{{ kibana_port }}"
    networks:
      - elastic
    depends_on:
      - elasticsearch

networks:
  elastic:
    driver: bridge

volumes:
  elasticsearch_data:
